version: '3.8'

services:
  nginx:
    image: nginx:1.26.0
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      order-api:
        condition: service_healthy
    networks:
      - order-network

  order-api:
    build:
      context: ./order-api
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb:27017/orders_db?replicaSet=rs0
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=development
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_SERVICE_NAME=order-api
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tempo:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./order-api/logs:/app/logs
    networks:
      - order-network

  order-processor:
    build:
      context: ./order-processor
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb:27017/orders_db?replicaSet=rs0
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_SERVICE_NAME=order-processor
      - NODE_ENV=development
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tempo:
        condition: service_started
    volumes:
      - ./order-processor/logs:/app/logs
    networks:
      - order-network

  mongodb:
    image: mongo:7.0.12
    environment:
      - MONGO_INITDB_DATABASE=orders_db
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init.sh:/docker-entrypoint-initdb.d/mongodb-init.sh
    ports:
      - "27017:27017"
    command: ["/docker-entrypoint-initdb.d/mongodb-init.sh"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - order-network

  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      - order-network

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200" # HTTP API
      - "4317:4317" # OTLP gRPC
    networks:
      - order-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - tempo
    networks:
      - order-network

volumes:
  mongodb_data:

networks:
  order-network:
    driver: bridge